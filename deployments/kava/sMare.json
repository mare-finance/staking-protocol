{
  "address": "0x2c4A1f47c3E15F468399A87c4B41ec0d19297772",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "mare_",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newShareIndex",
          "type": "uint256"
        }
      ],
      "name": "AddReward",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Claim",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalShares",
          "type": "uint256"
        }
      ],
      "name": "EditRecipient",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lastShareIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "credit",
          "type": "uint256"
        }
      ],
      "name": "UpdateCredit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "addReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_shareIndex",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "addToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "claim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimAll",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getClaimable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mare",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "recipients",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "lastShareIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "credit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "removeToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "withdrawalPendingTime_",
          "type": "uint256"
        }
      ],
      "name": "setWithdrawalPendingTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "shareIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "shares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenIndexes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "updateCredit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "credit",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "withdrawal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "releaseTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawalPendingTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x194b6a9759109d0bf5ced792d5941f07ac484bf994e5dd0f0530a22b56a352d7",
  "receipt": {
    "to": null,
    "from": "0xFb59Ce8986943163F14C590755b29dB2998F2322",
    "contractAddress": "0x2c4A1f47c3E15F468399A87c4B41ec0d19297772",
    "transactionIndex": 3,
    "gasUsed": "1820089",
    "logsBloom": "0x
    "blockHash": "0x2af5569eb3badab1a789a54e8e3ead00b149d16f1441d78f674ae4dab9aaf33d",
    "transactionHash": "0x194b6a9759109d0bf5ced792d5941f07ac484bf994e5dd0f0530a22b56a352d7",
    "logs": [
      {
        "transactionIndex": 3,
        "blockNumber": 3800173,
        "transactionHash": "0x194b6a9759109d0bf5ced792d5941f07ac484bf994e5dd0f0530a22b56a352d7",
        "address": "0x2c4A1f47c3E15F468399A87c4B41ec0d19297772",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000fb59ce8986943163f14c590755b29db2998f2322"
        ],
        "data": "0x",
        "logIndex": 2,
        "blockHash": "0x2af5569eb3badab1a789a54e8e3ead00b149d16f1441d78f674ae4dab9aaf33d"
      }
    ],
    "blockNumber": 3800173,
    "cumulativeGasUsed": "1916708",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xd86C8d4279CCaFbec840c782BcC50D201f277419",
    "Staked Mare",
    "sMare"
  ],
  "numDeployments": 1,
  "solcInputHash": "6400b3b53f29dccdf0b5ff6bdd796266",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"mare_\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newShareIndex\",\"type\":\"uint256\"}],\"name\":\"AddReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalShares\",\"type\":\"uint256\"}],\"name\":\"EditRecipient\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastShareIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"credit\",\"type\":\"uint256\"}],\"name\":\"UpdateCredit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_shareIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"addToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimAll\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getClaimable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mare\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"recipients\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lastShareIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"credit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"removeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"withdrawalPendingTime_\",\"type\":\"uint256\"}],\"name\":\"setWithdrawalPendingTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"shareIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"shares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenIndexes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"updateCredit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"credit\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"withdrawal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawalPendingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StakedDistributor.sol\":\"StakedDistributor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\"},\"contracts/Distributor.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.10;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nimport \\\"./libraries/SafeToken.sol\\\";\\n\\nabstract contract Distributor is Ownable {\\n    using SafeMath for uint256;\\n    using SafeToken for address;\\n\\n    struct Recipient {\\n        uint256 lastShareIndex;\\n        uint256 credit;\\n    }\\n    // token => account => recipient\\n    mapping(address => mapping(address => Recipient)) public recipients;\\n\\n    // account => shares\\n    mapping(address => uint256) public shares;\\n\\n    // token => shareIndex\\n    mapping(address => uint256) public shareIndex;\\n\\n    // token => totalShares\\n    uint256 public totalShares;\\n\\n    event AddReward(\\n        address indexed token,\\n        uint256 amount,\\n        uint256 newShareIndex\\n    );\\n    event UpdateCredit(\\n        address indexed token,\\n        address indexed account,\\n        uint256 lastShareIndex,\\n        uint256 credit\\n    );\\n    event EditRecipient(\\n        address indexed account,\\n        uint256 shares,\\n        uint256 totalShares\\n    );\\n    event Claim(address indexed token, address indexed account, uint256 amount);\\n\\n    // Valid reward tokens\\n    address[] public tokens;\\n    mapping(address => uint256) public tokenIndexes;\\n\\n    constructor() {\\n        tokens.push(address(0));\\n    }\\n\\n    function addReward(\\n        address token,\\n        uint256 amount\\n    ) public returns (uint256 _shareIndex) {\\n        require(tokenIndexes[token] > 0, \\\"Distributor: Invalid token\\\");\\n        require(amount > 0, \\\"Distributor: Invalid amount\\\");\\n\\n        if (totalShares == 0) return shareIndex[token];\\n\\n        _shareIndex = amount.mul(2 ** 160).div(totalShares).add(\\n            shareIndex[token]\\n        );\\n        shareIndex[token] = _shareIndex;\\n\\n        token.safeTransferFrom(msg.sender, address(this), amount);\\n        emit AddReward(token, amount, shareIndex[token]);\\n    }\\n\\n    function updateCredit(\\n        address token,\\n        address account\\n    ) public returns (uint256 credit) {\\n        require(tokenIndexes[token] > 0, \\\"Distributor: Invalid token\\\");\\n\\n        uint256 _shareIndex = shareIndex[token];\\n        if (_shareIndex == 0) return 0;\\n\\n        Recipient storage recipient = recipients[token][account];\\n        uint256 lastShareIndex = recipient.lastShareIndex;\\n        uint256 lastCredit = recipient.credit;\\n        uint256 _shares = shares[account];\\n\\n        credit =\\n            lastCredit +\\n            _shareIndex.sub(lastShareIndex).mul(_shares) /\\n            2 ** 160;\\n        recipient.lastShareIndex = _shareIndex;\\n        recipient.credit = credit;\\n\\n        emit UpdateCredit(token, account, _shareIndex, credit);\\n    }\\n\\n    function claim(address token) external returns (uint256 amount) {\\n        return claimInternal(token, msg.sender);\\n    }\\n\\n    function claimAll() external returns (uint256[] memory amounts) {\\n        amounts = new uint256[](tokens.length);\\n        for (uint256 i = 1; i < tokens.length; i++) {\\n            amounts[i] = claimInternal(tokens[i], msg.sender);\\n        }\\n    }\\n\\n    function getClaimable(\\n        address token,\\n        address account\\n    ) external view returns (uint256 amount) {\\n        uint256 _shareIndex = shareIndex[token];\\n        if (_shareIndex == 0) return 0;\\n\\n        Recipient memory recipient = recipients[token][account];\\n        uint256 lastShareIndex = recipient.lastShareIndex;\\n        uint256 lastCredit = recipient.credit;\\n        uint256 _shares = shares[account];\\n\\n        amount =\\n            lastCredit +\\n            _shareIndex.sub(lastShareIndex).mul(_shares) /\\n            2 ** 160;\\n    }\\n\\n    function claimInternal(\\n        address token,\\n        address account\\n    ) internal returns (uint256 amount) {\\n        require(tokenIndexes[token] > 0, \\\"Distributor: Invalid token\\\");\\n\\n        amount = updateCredit(token, account);\\n        if (amount > 0) {\\n            recipients[token][account].credit = 0;\\n\\n            IERC20(token).transfer(account, amount);\\n            //token.safeTransfer(account, amount);\\n\\n            emit Claim(token, account, amount);\\n        }\\n    }\\n\\n    function _editRecipientInternal(address account, uint256 shares_) internal {\\n        for (uint256 i = 1; i < tokens.length; i++) {\\n            updateCredit(tokens[i], account);\\n        }\\n\\n        //updateCredit(token, account);\\n        uint256 prevShares = shares[account];\\n        uint256 _totalShares = shares_ > prevShares\\n            ? totalShares.add(shares_ - prevShares)\\n            : totalShares.sub(prevShares - shares_);\\n        totalShares = _totalShares;\\n        shares[account] = shares_;\\n        emit EditRecipient(account, shares_, _totalShares);\\n    }\\n\\n    /* Admin functions */\\n    function addToken(address token) external onlyOwner {\\n        require(tokenIndexes[token] == 0, \\\"Distributor: token already added\\\");\\n        tokens.push(token);\\n        tokenIndexes[token] = tokens.length - 1;\\n    }\\n\\n    function removeToken(address token) external onlyOwner {\\n        uint256 index = tokenIndexes[token];\\n        require(index > 0, \\\"Distributor: token not found\\\");\\n        uint256 lastIndex = tokens.length - 1;\\n        if (index < lastIndex) {\\n            address lastToken = tokens[lastIndex];\\n            tokens[index] = lastToken;\\n            tokenIndexes[lastToken] = index;\\n        }\\n        tokens.pop();\\n        delete tokenIndexes[token];\\n    }\\n}\\n\",\"keccak256\":\"0x940801dd79a02381f4d78d9f00452e405e53e9079b6903e1e4f8ab2e5d83e0d8\",\"license\":\"UNLICENSED\"},\"contracts/StakedDistributor.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.10;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\nimport \\\"./libraries/SafeToken.sol\\\";\\nimport \\\"./Distributor.sol\\\";\\n\\ncontract StakedDistributor is Distributor, ERC20 {\\n    using SafeToken for address;\\n    struct Withdrawal {\\n        uint256 amount;\\n        uint256 releaseTime;\\n    }\\n\\n    event Withdraw(address indexed user, uint256 amount);\\n\\n    uint256 public withdrawalPendingTime = 7 * 1 days;\\n    mapping(address => Withdrawal) public withdrawal;\\n\\n    address public immutable mare;\\n\\n    constructor(\\n        address mare_,\\n        string memory name,\\n        string memory symbol\\n    ) ERC20(name, symbol) {\\n        mare = mare_;\\n    }\\n\\n    function mint(uint256 amount) public {\\n        mare.safeTransferFrom(msg.sender, address(this), amount);\\n        _mint(msg.sender, amount);\\n    }\\n\\n    function burn(uint256 amount) public {\\n        if (amount > 0) {\\n            _burn(msg.sender, amount);\\n        }\\n\\n        Withdrawal storage withdrawal_ = withdrawal[msg.sender];\\n        withdrawal_.amount = withdrawal_.amount + amount;\\n        withdrawal_.releaseTime = block.timestamp + withdrawalPendingTime;\\n    }\\n\\n    function withdraw() public {\\n        Withdrawal storage withdrawal_ = withdrawal[msg.sender];\\n        require(\\n            block.timestamp >= withdrawal_.releaseTime,\\n            \\\"StakedDistributor: not released\\\"\\n        );\\n        uint256 amount = withdrawal_.amount;\\n        withdrawal_.amount = 0;\\n        mare.safeTransfer(msg.sender, amount);\\n        emit Withdraw(msg.sender, amount);\\n    }\\n\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 /* amount */\\n    ) internal override {\\n        if (from != address(0)) {\\n            _editRecipientInternal(from, balanceOf(from));\\n        }\\n\\n        if (to != address(0)) {\\n            _editRecipientInternal(to, balanceOf(to));\\n        }\\n    }\\n\\n    /* Admin functions */\\n    function setWithdrawalPendingTime(\\n        uint256 withdrawalPendingTime_\\n    ) public onlyOwner {\\n        withdrawalPendingTime = withdrawalPendingTime_;\\n    }\\n}\\n\",\"keccak256\":\"0x737120f6acebbbe3e58c5a009ff69351c6bac1757d4adbaa20e333d1a316a72b\",\"license\":\"UNLICENSED\"},\"contracts/libraries/SafeToken.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.10;\\n\\ninterface ERC20Interface {\\n    function balanceOf(address user) external view returns (uint256);\\n}\\n\\nlibrary SafeToken {\\n    function myBalance(address token) internal view returns (uint256) {\\n        return ERC20Interface(token).balanceOf(address(this));\\n    }\\n\\n    function balanceOf(\\n        address token,\\n        address user\\n    ) internal view returns (uint256) {\\n        return ERC20Interface(token).balanceOf(user);\\n    }\\n\\n    function safeApprove(address token, address to, uint256 value) internal {\\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(\\n            abi.encodeWithSelector(0x095ea7b3, to, value)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"!safeApprove\\\"\\n        );\\n    }\\n\\n    function safeTransfer(address token, address to, uint256 value) internal {\\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(\\n            abi.encodeWithSelector(0xa9059cbb, to, value)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"!safeTransfer\\\"\\n        );\\n    }\\n\\n    function safeTransferFrom(\\n        address token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\\n        (bool success, bytes memory data) = token.call(\\n            abi.encodeWithSelector(0x23b872dd, from, to, value)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"!safeTransferFrom\\\"\\n        );\\n    }\\n\\n    function safeTransferETH(address to, uint256 value) internal {\\n        (bool success, ) = to.call{value: value}(new bytes(0));\\n        require(success, \\\"!safeTransferETH\\\");\\n    }\\n}\\n\",\"keccak256\":\"0xb8d215aab7e034207135c7eb3165a9da8723f6ce1536b4c330d7ae316ea74f23\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60a060405262093a80600c553480156200001857600080fd5b506040516200211d3803806200211d8339810160408190526200003b9162000290565b81816200004833620000cd565b600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b031916905581516200009d90600a9060208501906200011d565b508051620000b390600b9060208401906200011d565b5050506001600160a01b0390921660805250620003579050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546200012b906200031a565b90600052602060002090601f0160209004810192826200014f57600085556200019a565b82601f106200016a57805160ff19168380011785556200019a565b828001600101855582156200019a579182015b828111156200019a5782518255916020019190600101906200017d565b50620001a8929150620001ac565b5090565b5b80821115620001a85760008155600101620001ad565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001eb57600080fd5b81516001600160401b0380821115620002085762000208620001c3565b604051601f8301601f19908116603f01168101908282118183101715620002335762000233620001c3565b816040528381526020925086838588010111156200025057600080fd5b600091505b8382101562000274578582018301518183018401529082019062000255565b83821115620002865760008385830101525b9695505050505050565b600080600060608486031215620002a657600080fd5b83516001600160a01b0381168114620002be57600080fd5b60208501519093506001600160401b0380821115620002dc57600080fd5b620002ea87838801620001d9565b935060408601519150808211156200030157600080fd5b506200031086828701620001d9565b9150509250925092565b600181811c908216806200032f57607f821691505b602082108114156200035157634e487b7160e01b600052602260045260246000fd5b50919050565b608051611d9c620003816000396000818161032f0152818161069b0152610b0f0152611d9c6000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c8063715018a61161011a578063ce7c2ac2116100ad578063d77fa7ee1161007c578063d77fa7ee146104a7578063dd62ed3e146104d6578063edd6755d146104e9578063efe235d0146104fc578063f2fde38b1461050f57600080fd5b8063ce7c2ac21461043f578063d1058e591461045f578063d2f22cf014610474578063d48bfca71461049457600080fd5b80639feb8f50116100e95780639feb8f50146103f3578063a0712d6814610406578063a457c2d714610419578063a9059cbb1461042c57600080fd5b8063715018a6146103965780638da5cb5b1461039e57806395d89b41146103af57806396131049146103b757600080fd5b80633a98ef391161019d5780634f64b2be1161016c5780634f64b2be146102ff5780635890550f1461032a5780635fa7b584146103515780636131ab031461036457806370a082311461036d57600080fd5b80633a98ef39146102c65780633ccfd60b146102cf5780633fb81428146102d957806342966c68146102ec57600080fd5b80631e83409a116101d95780631e83409a1461027e57806323b872dd14610291578063313ce567146102a457806339509351146102b357600080fd5b806304bc3b1c1461020b57806306fdde031461023e578063095ea7b31461025357806318160ddd14610276575b600080fd5b61022b610219366004611a63565b60066020526000908152604090205481565b6040519081526020015b60405180910390f35b610246610522565b6040516102359190611aaa565b610266610261366004611add565b6105b4565b6040519015158152602001610235565b60095461022b565b61022b61028c366004611a63565b6105ce565b61026661029f366004611b07565b6105da565b60405160128152602001610235565b6102666102c1366004611add565b6105fe565b61022b60045481565b6102d7610620565b005b61022b6102e7366004611b43565b6106fb565b6102d76102fa366004611b76565b6107aa565b61031261030d366004611b76565b6107ee565b6040516001600160a01b039091168152602001610235565b6103127f000000000000000000000000000000000000000000000000000000000000000081565b6102d761035f366004611a63565b610818565b61022b600c5481565b61022b61037b366004611a63565b6001600160a01b031660009081526007602052604090205490565b6102d7610974565b6000546001600160a01b0316610312565b610246610988565b6103de6103c5366004611a63565b600d602052600090815260409020805460019091015482565b60408051928352602083019190915201610235565b61022b610401366004611add565b610997565b6102d7610414366004611b76565b610b02565b610266610427366004611add565b610b44565b61026661043a366004611add565b610bbf565b61022b61044d366004611a63565b60026020526000908152604090205481565b610467610bcd565b6040516102359190611b8f565b61022b610482366004611a63565b60036020526000908152604090205481565b6102d76104a2366004611a63565b610c88565b6103de6104b5366004611b43565b60016020818152600093845260408085209091529183529120805491015482565b61022b6104e4366004611b43565b610d6b565b6102d76104f7366004611b76565b610d96565b61022b61050a366004611b43565b610da3565b6102d761051d366004611a63565b610ec2565b6060600a805461053190611bd3565b80601f016020809104026020016040519081016040528092919081815260200182805461055d90611bd3565b80156105aa5780601f1061057f576101008083540402835291602001916105aa565b820191906000526020600020905b81548152906001019060200180831161058d57829003601f168201915b5050505050905090565b6000336105c2818585610f38565b60019150505b92915050565b60006105c8823361105c565b6000336105e8858285611199565b6105f3858585611213565b506001949350505050565b6000336105c28185856106118383610d6b565b61061b9190611c24565b610f38565b336000908152600d6020526040902060018101544210156106885760405162461bcd60e51b815260206004820152601f60248201527f5374616b65644469737472696275746f723a206e6f742072656c65617365640060448201526064015b60405180910390fd5b8054600082556106c26001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633836113c4565b60405181815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a25050565b6001600160a01b038216600090815260036020526040812054806107235760009150506105c8565b6001600160a01b0380851660009081526001602081815260408084209488168085529482528084208151808301835281548082529190940154848401819052958552600290925290922054909290600160a01b61078a8261078488876114cf565b906114e2565b6107949190611c3c565b61079e9083611c24565b98975050505050505050565b80156107ba576107ba33826114ee565b336000908152600d6020526040902080546107d6908390611c24565b8155600c546107e59042611c24565b60019091015550565b600581815481106107fe57600080fd5b6000918252602090912001546001600160a01b0316905081565b61082061162e565b6001600160a01b038116600090815260066020526040902054806108865760405162461bcd60e51b815260206004820152601c60248201527f4469737472696275746f723a20746f6b656e206e6f7420666f756e6400000000604482015260640161067f565b60055460009061089890600190611c5e565b905080821015610921576000600582815481106108b7576108b7611c75565b600091825260209091200154600580546001600160a01b0390921692508291859081106108e6576108e6611c75565b600091825260208083209190910180546001600160a01b0319166001600160a01b039485161790559290911681526006909152604090208290555b600580548061093257610932611c8b565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03949094168152600690935250506040812055565b61097c61162e565b6109866000611688565b565b6060600b805461053190611bd3565b6001600160a01b0382166000908152600660205260408120546109cc5760405162461bcd60e51b815260040161067f90611ca1565b60008211610a1c5760405162461bcd60e51b815260206004820152601b60248201527f4469737472696275746f723a20496e76616c696420616d6f756e740000000000604482015260640161067f565b600454610a4257506001600160a01b0382166000908152600360205260409020546105c8565b6001600160a01b038316600090815260036020526040902054600454610a819190610a7b90610a7586600160a01b6114e2565b906116d8565b906116e4565b6001600160a01b0384166000818152600360205260409020829055909150610aab903330856116f0565b6001600160a01b038316600081815260036020908152604091829020548251868152918201527f8ad4c79f7fda5880944bd79d8607b099b5d19d1a10100101c978cdbc3878d3e0910160405180910390a292915050565b610b376001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330846116f0565b610b413382611808565b50565b60003381610b528286610d6b565b905083811015610bb25760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161067f565b6105f38286868403610f38565b6000336105c2818585611213565b60055460609067ffffffffffffffff811115610beb57610beb611cd8565b604051908082528060200260200182016040528015610c14578160200160208202803683370190505b50905060015b600554811015610c8457610c5560058281548110610c3a57610c3a611c75565b6000918252602090912001546001600160a01b03163361105c565b828281518110610c6757610c67611c75565b602090810291909101015280610c7c81611cee565b915050610c1a565b5090565b610c9061162e565b6001600160a01b03811660009081526006602052604090205415610cf65760405162461bcd60e51b815260206004820181905260248201527f4469737472696275746f723a20746f6b656e20616c7265616479206164646564604482015260640161067f565b600580546001808201835560008390527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db090910180546001600160a01b0319166001600160a01b0385161790559054610d4f9190611c5e565b6001600160a01b03909116600090815260066020526040902055565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205490565b610d9e61162e565b600c55565b6001600160a01b038216600090815260066020526040812054610dd85760405162461bcd60e51b815260040161067f90611ca1565b6001600160a01b03831660009081526003602052604090205480610e005760009150506105c8565b6001600160a01b038085166000908152600160208181526040808420948816845293815283832080549281015460029092529390922054909190600160a01b610e4d8261078488876114cf565b610e579190611c3c565b610e619083611c24565b8585556001850181905560408051878152602081018390529197506001600160a01b0389811692908b16917f39cb59c115665c2eda6fe547d7c2a8a8f6908243bf576a69f574973a0b650206910160405180910390a3505050505092915050565b610eca61162e565b6001600160a01b038116610f2f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161067f565b610b4181611688565b6001600160a01b038316610f9a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161067f565b6001600160a01b038216610ffb5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161067f565b6001600160a01b0383811660008181526008602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0382166000908152600660205260408120546110915760405162461bcd60e51b815260040161067f90611ca1565b61109b8383610da3565b905080156105c8576001600160a01b03808416600081815260016020818152604080842095881684529490528382200155905163a9059cbb60e01b815263a9059cbb9061110290859085906004016001600160a01b03929092168252602082015260400190565b6020604051808303816000875af1158015611121573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111459190611d09565b50816001600160a01b0316836001600160a01b03167f70eb43c4a8ae8c40502dcf22436c509c28d6ff421cf07c491be56984bd9870688360405161118b91815260200190565b60405180910390a392915050565b60006111a58484610d6b565b9050600019811461120d57818110156112005760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161067f565b61120d8484848403610f38565b50505050565b6001600160a01b0383166112775760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161067f565b6001600160a01b0382166112d95760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161067f565b6001600160a01b038316600090815260076020526040902054818110156113515760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161067f565b6001600160a01b0380851660008181526007602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906113b19086815260200190565b60405180910390a361120d8484846118d5565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916114209190611d2b565b6000604051808303816000865af19150503d806000811461145d576040519150601f19603f3d011682016040523d82523d6000602084013e611462565b606091505b509150915081801561148c57508051158061148c57508080602001905181019061148c9190611d09565b6114c85760405162461bcd60e51b815260206004820152600d60248201526c10b9b0b332aa3930b739b332b960991b604482015260640161067f565b5050505050565b60006114db8284611c5e565b9392505050565b60006114db8284611d47565b6001600160a01b03821661154e5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161067f565b6001600160a01b038216600090815260076020526040902054818110156115c25760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161067f565b6001600160a01b03831660008181526007602090815260408083208686039055600980548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3611629836000846118d5565b505050565b6000546001600160a01b031633146109865760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161067f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006114db8284611c3c565b60006114db8284611c24565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291516000928392908816916117549190611d2b565b6000604051808303816000865af19150503d8060008114611791576040519150601f19603f3d011682016040523d82523d6000602084013e611796565b606091505b50915091508180156117c05750805115806117c05750808060200190518101906117c09190611d09565b6118005760405162461bcd60e51b815260206004820152601160248201527021736166655472616e7366657246726f6d60781b604482015260640161067f565b505050505050565b6001600160a01b03821661185e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161067f565b80600960008282546118709190611c24565b90915550506001600160a01b0382166000818152600760209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36118d1600083836118d5565b5050565b6001600160a01b0383161561190c5761190c83611907856001600160a01b031660009081526007602052604090205490565b61193e565b6001600160a01b038216156116295761162982611907846001600160a01b031660009081526007602052604090205490565b60015b60055481101561198f5761197c6005828154811061196157611961611c75565b6000918252602090912001546001600160a01b031684610da3565b508061198781611cee565b915050611941565b506001600160a01b038216600090815260026020526040812054908183116119cc576119c76119be8484611c5e565b600454906114cf565b6119e2565b6119e26119d98385611c5e565b600454906116e4565b60048190556001600160a01b038516600081815260026020908152604091829020879055815187815290810184905292935090917fff3664f5f2f8f85ecd8d30ef2aa6773d8a8448219c7421dcbb67957fb3fafba1910160405180910390a250505050565b80356001600160a01b0381168114611a5e57600080fd5b919050565b600060208284031215611a7557600080fd5b6114db82611a47565b60005b83811015611a99578181015183820152602001611a81565b8381111561120d5750506000910152565b6020815260008251806020840152611ac9816040850160208701611a7e565b601f01601f19169190910160400192915050565b60008060408385031215611af057600080fd5b611af983611a47565b946020939093013593505050565b600080600060608486031215611b1c57600080fd5b611b2584611a47565b9250611b3360208501611a47565b9150604084013590509250925092565b60008060408385031215611b5657600080fd5b611b5f83611a47565b9150611b6d60208401611a47565b90509250929050565b600060208284031215611b8857600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015611bc757835183529284019291840191600101611bab565b50909695505050505050565b600181811c90821680611be757607f821691505b60208210811415611c0857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611c3757611c37611c0e565b500190565b600082611c5957634e487b7160e01b600052601260045260246000fd5b500490565b600082821015611c7057611c70611c0e565b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b6020808252601a908201527f4469737472696275746f723a20496e76616c696420746f6b656e000000000000604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6000600019821415611d0257611d02611c0e565b5060010190565b600060208284031215611d1b57600080fd5b815180151581146114db57600080fd5b60008251611d3d818460208701611a7e565b9190910192915050565b6000816000190483118215151615611d6157611d61611c0e565b50029056fea2646970667358221220d572f9691e36c14c4eb0563dc65ca0cd39b8a6ad2c4db7a822ab51f437e0917b64736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102065760003560e01c8063715018a61161011a578063ce7c2ac2116100ad578063d77fa7ee1161007c578063d77fa7ee146104a7578063dd62ed3e146104d6578063edd6755d146104e9578063efe235d0146104fc578063f2fde38b1461050f57600080fd5b8063ce7c2ac21461043f578063d1058e591461045f578063d2f22cf014610474578063d48bfca71461049457600080fd5b80639feb8f50116100e95780639feb8f50146103f3578063a0712d6814610406578063a457c2d714610419578063a9059cbb1461042c57600080fd5b8063715018a6146103965780638da5cb5b1461039e57806395d89b41146103af57806396131049146103b757600080fd5b80633a98ef391161019d5780634f64b2be1161016c5780634f64b2be146102ff5780635890550f1461032a5780635fa7b584146103515780636131ab031461036457806370a082311461036d57600080fd5b80633a98ef39146102c65780633ccfd60b146102cf5780633fb81428146102d957806342966c68146102ec57600080fd5b80631e83409a116101d95780631e83409a1461027e57806323b872dd14610291578063313ce567146102a457806339509351146102b357600080fd5b806304bc3b1c1461020b57806306fdde031461023e578063095ea7b31461025357806318160ddd14610276575b600080fd5b61022b610219366004611a63565b60066020526000908152604090205481565b6040519081526020015b60405180910390f35b610246610522565b6040516102359190611aaa565b610266610261366004611add565b6105b4565b6040519015158152602001610235565b60095461022b565b61022b61028c366004611a63565b6105ce565b61026661029f366004611b07565b6105da565b60405160128152602001610235565b6102666102c1366004611add565b6105fe565b61022b60045481565b6102d7610620565b005b61022b6102e7366004611b43565b6106fb565b6102d76102fa366004611b76565b6107aa565b61031261030d366004611b76565b6107ee565b6040516001600160a01b039091168152602001610235565b6103127f000000000000000000000000000000000000000000000000000000000000000081565b6102d761035f366004611a63565b610818565b61022b600c5481565b61022b61037b366004611a63565b6001600160a01b031660009081526007602052604090205490565b6102d7610974565b6000546001600160a01b0316610312565b610246610988565b6103de6103c5366004611a63565b600d602052600090815260409020805460019091015482565b60408051928352602083019190915201610235565b61022b610401366004611add565b610997565b6102d7610414366004611b76565b610b02565b610266610427366004611add565b610b44565b61026661043a366004611add565b610bbf565b61022b61044d366004611a63565b60026020526000908152604090205481565b610467610bcd565b6040516102359190611b8f565b61022b610482366004611a63565b60036020526000908152604090205481565b6102d76104a2366004611a63565b610c88565b6103de6104b5366004611b43565b60016020818152600093845260408085209091529183529120805491015482565b61022b6104e4366004611b43565b610d6b565b6102d76104f7366004611b76565b610d96565b61022b61050a366004611b43565b610da3565b6102d761051d366004611a63565b610ec2565b6060600a805461053190611bd3565b80601f016020809104026020016040519081016040528092919081815260200182805461055d90611bd3565b80156105aa5780601f1061057f576101008083540402835291602001916105aa565b820191906000526020600020905b81548152906001019060200180831161058d57829003601f168201915b5050505050905090565b6000336105c2818585610f38565b60019150505b92915050565b60006105c8823361105c565b6000336105e8858285611199565b6105f3858585611213565b506001949350505050565b6000336105c28185856106118383610d6b565b61061b9190611c24565b610f38565b336000908152600d6020526040902060018101544210156106885760405162461bcd60e51b815260206004820152601f60248201527f5374616b65644469737472696275746f723a206e6f742072656c65617365640060448201526064015b60405180910390fd5b8054600082556106c26001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633836113c4565b60405181815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a25050565b6001600160a01b038216600090815260036020526040812054806107235760009150506105c8565b6001600160a01b0380851660009081526001602081815260408084209488168085529482528084208151808301835281548082529190940154848401819052958552600290925290922054909290600160a01b61078a8261078488876114cf565b906114e2565b6107949190611c3c565b61079e9083611c24565b98975050505050505050565b80156107ba576107ba33826114ee565b336000908152600d6020526040902080546107d6908390611c24565b8155600c546107e59042611c24565b60019091015550565b600581815481106107fe57600080fd5b6000918252602090912001546001600160a01b0316905081565b61082061162e565b6001600160a01b038116600090815260066020526040902054806108865760405162461bcd60e51b815260206004820152601c60248201527f4469737472696275746f723a20746f6b656e206e6f7420666f756e6400000000604482015260640161067f565b60055460009061089890600190611c5e565b905080821015610921576000600582815481106108b7576108b7611c75565b600091825260209091200154600580546001600160a01b0390921692508291859081106108e6576108e6611c75565b600091825260208083209190910180546001600160a01b0319166001600160a01b039485161790559290911681526006909152604090208290555b600580548061093257610932611c8b565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03949094168152600690935250506040812055565b61097c61162e565b6109866000611688565b565b6060600b805461053190611bd3565b6001600160a01b0382166000908152600660205260408120546109cc5760405162461bcd60e51b815260040161067f90611ca1565b60008211610a1c5760405162461bcd60e51b815260206004820152601b60248201527f4469737472696275746f723a20496e76616c696420616d6f756e740000000000604482015260640161067f565b600454610a4257506001600160a01b0382166000908152600360205260409020546105c8565b6001600160a01b038316600090815260036020526040902054600454610a819190610a7b90610a7586600160a01b6114e2565b906116d8565b906116e4565b6001600160a01b0384166000818152600360205260409020829055909150610aab903330856116f0565b6001600160a01b038316600081815260036020908152604091829020548251868152918201527f8ad4c79f7fda5880944bd79d8607b099b5d19d1a10100101c978cdbc3878d3e0910160405180910390a292915050565b610b376001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330846116f0565b610b413382611808565b50565b60003381610b528286610d6b565b905083811015610bb25760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161067f565b6105f38286868403610f38565b6000336105c2818585611213565b60055460609067ffffffffffffffff811115610beb57610beb611cd8565b604051908082528060200260200182016040528015610c14578160200160208202803683370190505b50905060015b600554811015610c8457610c5560058281548110610c3a57610c3a611c75565b6000918252602090912001546001600160a01b03163361105c565b828281518110610c6757610c67611c75565b602090810291909101015280610c7c81611cee565b915050610c1a565b5090565b610c9061162e565b6001600160a01b03811660009081526006602052604090205415610cf65760405162461bcd60e51b815260206004820181905260248201527f4469737472696275746f723a20746f6b656e20616c7265616479206164646564604482015260640161067f565b600580546001808201835560008390527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db090910180546001600160a01b0319166001600160a01b0385161790559054610d4f9190611c5e565b6001600160a01b03909116600090815260066020526040902055565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205490565b610d9e61162e565b600c55565b6001600160a01b038216600090815260066020526040812054610dd85760405162461bcd60e51b815260040161067f90611ca1565b6001600160a01b03831660009081526003602052604090205480610e005760009150506105c8565b6001600160a01b038085166000908152600160208181526040808420948816845293815283832080549281015460029092529390922054909190600160a01b610e4d8261078488876114cf565b610e579190611c3c565b610e619083611c24565b8585556001850181905560408051878152602081018390529197506001600160a01b0389811692908b16917f39cb59c115665c2eda6fe547d7c2a8a8f6908243bf576a69f574973a0b650206910160405180910390a3505050505092915050565b610eca61162e565b6001600160a01b038116610f2f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161067f565b610b4181611688565b6001600160a01b038316610f9a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161067f565b6001600160a01b038216610ffb5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161067f565b6001600160a01b0383811660008181526008602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0382166000908152600660205260408120546110915760405162461bcd60e51b815260040161067f90611ca1565b61109b8383610da3565b905080156105c8576001600160a01b03808416600081815260016020818152604080842095881684529490528382200155905163a9059cbb60e01b815263a9059cbb9061110290859085906004016001600160a01b03929092168252602082015260400190565b6020604051808303816000875af1158015611121573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111459190611d09565b50816001600160a01b0316836001600160a01b03167f70eb43c4a8ae8c40502dcf22436c509c28d6ff421cf07c491be56984bd9870688360405161118b91815260200190565b60405180910390a392915050565b60006111a58484610d6b565b9050600019811461120d57818110156112005760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161067f565b61120d8484848403610f38565b50505050565b6001600160a01b0383166112775760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161067f565b6001600160a01b0382166112d95760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161067f565b6001600160a01b038316600090815260076020526040902054818110156113515760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161067f565b6001600160a01b0380851660008181526007602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906113b19086815260200190565b60405180910390a361120d8484846118d5565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916114209190611d2b565b6000604051808303816000865af19150503d806000811461145d576040519150601f19603f3d011682016040523d82523d6000602084013e611462565b606091505b509150915081801561148c57508051158061148c57508080602001905181019061148c9190611d09565b6114c85760405162461bcd60e51b815260206004820152600d60248201526c10b9b0b332aa3930b739b332b960991b604482015260640161067f565b5050505050565b60006114db8284611c5e565b9392505050565b60006114db8284611d47565b6001600160a01b03821661154e5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161067f565b6001600160a01b038216600090815260076020526040902054818110156115c25760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161067f565b6001600160a01b03831660008181526007602090815260408083208686039055600980548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3611629836000846118d5565b505050565b6000546001600160a01b031633146109865760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161067f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006114db8284611c3c565b60006114db8284611c24565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291516000928392908816916117549190611d2b565b6000604051808303816000865af19150503d8060008114611791576040519150601f19603f3d011682016040523d82523d6000602084013e611796565b606091505b50915091508180156117c05750805115806117c05750808060200190518101906117c09190611d09565b6118005760405162461bcd60e51b815260206004820152601160248201527021736166655472616e7366657246726f6d60781b604482015260640161067f565b505050505050565b6001600160a01b03821661185e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161067f565b80600960008282546118709190611c24565b90915550506001600160a01b0382166000818152600760209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36118d1600083836118d5565b5050565b6001600160a01b0383161561190c5761190c83611907856001600160a01b031660009081526007602052604090205490565b61193e565b6001600160a01b038216156116295761162982611907846001600160a01b031660009081526007602052604090205490565b60015b60055481101561198f5761197c6005828154811061196157611961611c75565b6000918252602090912001546001600160a01b031684610da3565b508061198781611cee565b915050611941565b506001600160a01b038216600090815260026020526040812054908183116119cc576119c76119be8484611c5e565b600454906114cf565b6119e2565b6119e26119d98385611c5e565b600454906116e4565b60048190556001600160a01b038516600081815260026020908152604091829020879055815187815290810184905292935090917fff3664f5f2f8f85ecd8d30ef2aa6773d8a8448219c7421dcbb67957fb3fafba1910160405180910390a250505050565b80356001600160a01b0381168114611a5e57600080fd5b919050565b600060208284031215611a7557600080fd5b6114db82611a47565b60005b83811015611a99578181015183820152602001611a81565b8381111561120d5750506000910152565b6020815260008251806020840152611ac9816040850160208701611a7e565b601f01601f19169190910160400192915050565b60008060408385031215611af057600080fd5b611af983611a47565b946020939093013593505050565b600080600060608486031215611b1c57600080fd5b611b2584611a47565b9250611b3360208501611a47565b9150604084013590509250925092565b60008060408385031215611b5657600080fd5b611b5f83611a47565b9150611b6d60208401611a47565b90509250929050565b600060208284031215611b8857600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015611bc757835183529284019291840191600101611bab565b50909695505050505050565b600181811c90821680611be757607f821691505b60208210811415611c0857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611c3757611c37611c0e565b500190565b600082611c5957634e487b7160e01b600052601260045260246000fd5b500490565b600082821015611c7057611c70611c0e565b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b6020808252601a908201527f4469737472696275746f723a20496e76616c696420746f6b656e000000000000604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6000600019821415611d0257611d02611c0e565b5060010190565b600060208284031215611d1b57600080fd5b815180151581146114db57600080fd5b60008251611d3d818460208701611a7e565b9190910192915050565b6000816000190483118215151615611d6157611d61611c0e565b50029056fea2646970667358221220d572f9691e36c14c4eb0563dc65ca0cd39b8a6ad2c4db7a822ab51f437e0917b64736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/StakedDistributor.sol:StakedDistributor",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1162,
        "contract": "contracts/StakedDistributor.sol:StakedDistributor",
        "label": "recipients",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Recipient)1155_storage))"
      },
      {
        "astId": 1166,
        "contract": "contracts/StakedDistributor.sol:StakedDistributor",
        "label": "shares",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1170,
        "contract": "contracts/StakedDistributor.sol:StakedDistributor",
        "label": "shareIndex",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1172,
        "contract": "contracts/StakedDistributor.sol:StakedDistributor",
        "label": "totalShares",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 1209,
        "contract": "contracts/StakedDistributor.sol:StakedDistributor",
        "label": "tokens",
        "offset": 0,
        "slot": "5",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 1213,
        "contract": "contracts/StakedDistributor.sol:StakedDistributor",
        "label": "tokenIndexes",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 128,
        "contract": "contracts/StakedDistributor.sol:StakedDistributor",
        "label": "_balances",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 134,
        "contract": "contracts/StakedDistributor.sol:StakedDistributor",
        "label": "_allowances",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 136,
        "contract": "contracts/StakedDistributor.sol:StakedDistributor",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 138,
        "contract": "contracts/StakedDistributor.sol:StakedDistributor",
        "label": "_name",
        "offset": 0,
        "slot": "10",
        "type": "t_string_storage"
      },
      {
        "astId": 140,
        "contract": "contracts/StakedDistributor.sol:StakedDistributor",
        "label": "_symbol",
        "offset": 0,
        "slot": "11",
        "type": "t_string_storage"
      },
      {
        "astId": 1757,
        "contract": "contracts/StakedDistributor.sol:StakedDistributor",
        "label": "withdrawalPendingTime",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 1762,
        "contract": "contracts/StakedDistributor.sol:StakedDistributor",
        "label": "withdrawal",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_address,t_struct(Withdrawal)1746_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_mapping(t_address,t_struct(Recipient)1155_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => struct Distributor.Recipient))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_struct(Recipient)1155_storage)"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_struct(Recipient)1155_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Distributor.Recipient)",
        "numberOfBytes": "32",
        "value": "t_struct(Recipient)1155_storage"
      },
      "t_mapping(t_address,t_struct(Withdrawal)1746_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct StakedDistributor.Withdrawal)",
        "numberOfBytes": "32",
        "value": "t_struct(Withdrawal)1746_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Recipient)1155_storage": {
        "encoding": "inplace",
        "label": "struct Distributor.Recipient",
        "members": [
          {
            "astId": 1152,
            "contract": "contracts/StakedDistributor.sol:StakedDistributor",
            "label": "lastShareIndex",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 1154,
            "contract": "contracts/StakedDistributor.sol:StakedDistributor",
            "label": "credit",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Withdrawal)1746_storage": {
        "encoding": "inplace",
        "label": "struct StakedDistributor.Withdrawal",
        "members": [
          {
            "astId": 1743,
            "contract": "contracts/StakedDistributor.sol:StakedDistributor",
            "label": "amount",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 1745,
            "contract": "contracts/StakedDistributor.sol:StakedDistributor",
            "label": "releaseTime",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}